{"version":3,"sources":["webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../../src/components/VTextField/VTextField.ts"],"names":["name","inheritAttrs","props","lazyValidation","value","Boolean","data","inputs","watchers","errorBag","watch","handler","errors","Object","this","deep","immediate","methods","watchInput","watcher","input","val","_uid","valid","shouldValidate","validate","filter","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","find","i","unwatch","render","h","staticClass","attrs","novalidate","attrs$","on","submit","e","$slots","valueComparator","type","default","mixins","functional","Number","max","String","parseInt","content","isGreater","class","ctx","window","mounted","onObserve","destroyed","length","options","callback","console","baseMixins","onVisible","dirtyTypes","directives","ripple","appendOuterIcon","autofocus","clearable","clearIcon","counter","counterValue","filled","flat","fullWidth","label","outlined","placeholder","prefix","prependInnerIcon","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computed","classes","VInput","computedColor","color","computedCounterValue","internalValue","hasCounter","hasDetails","get","set","isDirty","lazyValue","toString","isEnclosed","isLabelActive","isSingle","isSolo","labelPosition","offset","labelValue","$vuetify","rtl","left","right","showLabel","hasLabel","isFocused","created","$attrs","hasOwnProperty","requestAnimationFrame","focus","blur","clearableCallback","$refs","genAppendSlot","slot","genIcon","genSlot","genPrependInnerSlot","genIconSlot","genInputSlot","prepend","genClearIcon","undefined","disabled","genCounter","$createElement","dark","light","genDefaultSlot","genFieldset","genLabel","absolute","focused","for","VLabel","genLegend","width","span","domProps","innerHTML","style","genInput","listeners","id","readonly","keydown","onKeyDown","ref","genMessages","messagesNode","counterNode","genTextFieldSlot","genAffix","onBlur","$nextTick","onClick","onFocus","document","$emit","onInput","target","onMouseDown","onMouseUp","setLabelWidth","Math","scrollWidth","$el","setPrefixWidth","setPrependWidth","tryAutofocus","updateValue"],"mappings":"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","file":"js/chunk-1aef9279.14a22813.js","sourcesContent":["// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  inheritAttrs: false,\n\n  props: {\n    lazyValidation: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","import Vue, { PropType } from 'vue'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n  },\n})\n","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) {\n    // do nothing because intersection observer is not available\n    return Vue.extend({ name: 'intersectable' })\n  }\n\n  return Vue.extend({\n    name: 'intersectable',\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: {\n          handler: this.onObserve,\n        },\n      })\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'setLabelWidth',\n      'setPrefixWidth',\n      'setPrependWidth',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: { ripple },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return (this.internalValue || '').toString().length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return (this.lazyValue != null &&\n        this.lazyValue.toString().length > 0) ||\n        this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && (!this.isSingle || (!this.isLabelActive && !this.placeholder))\n    },\n    labelValue (): boolean {\n      return !this.isSingle &&\n        Boolean(this.isFocused || this.isLabelActive || this.placeholder)\n    },\n  },\n\n  watch: {\n    labelValue: 'setLabelWidth',\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    this.autofocus && this.tryAutofocus()\n    this.setLabelWidth()\n    this.setPrefixWidth()\n    this.setPrependWidth()\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots['append']) {\n        slot.push(this.$slots['append'] as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      const data = this.isDirty ? undefined : { attrs: { disabled: true } }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback, data),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      return this.$createElement(VCounter, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          max,\n          value: this.computedCounterValue,\n        },\n      })\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners['change'] // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: this.lazyValue,\n        },\n        attrs: {\n          ...this.attrs$,\n          autofocus: this.autofocus,\n          disabled: this.disabled,\n          id: this.computedId,\n          placeholder: this.placeholder,\n          readonly: this.readonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.disabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue)\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined || !this.$refs.label) return\n\n      this.labelWidth = Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input ||\n        document.activeElement === this.$refs.input\n      ) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n  },\n})\n"],"sourceRoot":""}